@model IEnumerable<WebTruyen.Models.Comic>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đọc Truyện Tranh</title>



</head>
<body>

    <h1> Truyện đề cử </h1>
    <div class="carousel">
        <div class="carousel-inner">
            @for (int i = 0; i < Model.Count(); i++)
            {
                var comic = Model.ElementAt(i);
                <div class="comic-item">
                    <a href="/Comics/Detail?title=@comic.Title">
                        <div class="container">
                            <img src="@comic.Cover" class="image-champ" alt="@comic.Title Cover" loading="lazy" />
                            <div class="copy_xxN7">
                                <h1>@comic.Title</h1>
                                <p class="latest-chapter">Latest Chapter: @comic.LatestChap</p>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
        <button class="carousel-button prev" onclick="moveSlide(-1)">&#10094;</button>
        <button class="carousel-button next" onclick="moveSlide(1)">&#10095;</button>
    </div>



    <h1>Truyện mới cập nhật</h1>
    <div class="comic-gallery">
        @foreach (var comic in Model)
        {
            <div class="comic-item">
                <a href="/Comics/Detail?title=@comic.Title">
                    <div class="container">
                        <img src="@comic.Cover" class="image-champ" />
                        <div class="copy_xxN7">
                            <h1>@comic.Title</h1>
                            <p>Latest Chapter: @comic.LatestChap</p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
   

   
    <script>
        let currentIndex = 0;
        const comicItems = document.querySelectorAll('.carousel-inner .comic-item');
        const totalItems = comicItems.length;
        const itemsPerView = 8; // Số lượng ảnh hiển thị
        const itemWidth = comicItems[0].offsetWidth; // Chiều rộng của mỗi ảnh trong pixel

        function moveSlide(direction) {
            // Cập nhật currentIndex với hành vi wrap-around
            if (direction > 0) { // Di chuyển sang phải
                if (currentIndex < totalItems - itemsPerView) {
                    currentIndex += direction;
                } else {
                    // Nếu đã đến cuối, quay lại đầu
                    currentIndex = 0;
                }
            } else if (direction < 0) { // Di chuyển sang trái
                if (currentIndex > 0) {
                    currentIndex += direction;
                } else {
                    // Nếu đã đến đầu, quay lại cuối
                    currentIndex = totalItems - itemsPerView;
                }
            }

            // Tính toán giá trị translateX theo pixel
            const translateX = currentIndex * itemWidth;

            // Áp dụng giá trị translateX
            document.querySelector('.carousel-inner').style.transform = `translateX(-${translateX}px)`;
        }

        // Gọi hàm để thiết lập trạng thái ban đầu
        moveSlide(0); // Chỉ cần gọi hàm này để khởi động ban đầu
        document.addEventListener("DOMContentLoaded", function () {
            const copyElements = document.querySelectorAll('.copy_xxN7');
            let maxHeight = 0;

            // Find the maximum height of all .copy_xxN7 elements
            copyElements.forEach(el => {
                const height = el.offsetHeight;
                if (height > maxHeight) maxHeight = height;
            });

            // Set each .copy_xxN7 element to the maximum height
            copyElements.forEach(el => {
                el.style.height = maxHeight + 'px';
            });
        });

    </script>


</body>
</html>
